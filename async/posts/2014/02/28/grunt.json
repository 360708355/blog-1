{"tags":[{"name":"grunt","permalink":"http://lingyucoder.github.io/tags/grunt/","url":"/async/tags/grunt.json","count":1}],"categories":[{"name":"NodeJs","permalink":"http://lingyucoder.github.io/categories/NodeJs/","url":"/async/categories/NodeJs.json","count":3}],"url":"/async/posts/2014/02/28/grunt.json","date":1393516800000,"path":{"year":2014,"month":2,"day":28,"name":"grunt"},"subtitle":"运用Grunt构建前端项目开发流程自动化","title":"初识Grunt","permalink":"http://lingyucoder.github.io/2014/02/28/grunt/","content":"<p>最近总是看到各种推荐使用Grunt的文章，说其对前端项目开发的自动化程度提升到一个新的流程。之前开发也是苦于各种文件的处理，比如之前写less的时候，每次改动都得手动去调用命令编译一次，效率很低。而Grunt正解决了这个问题，于是乎乘着这两天闲下来了，乘机学习了一下Grunt的基础用法</p>\n<a id=\"more\"></a>\n<h2 id=\"什么是Grunt？\">什么是Grunt？</h2><p>Grunt官网首页上，最显眼的一句话就是：“Grunt JavaScript世界的构建工具”，它运行于Node.js平台</p>\n<h2 id=\"为什么要用Grunt？\">为什么要用Grunt？</h2><p>面对以下一些常见的前端开发中的问题，Grunt都可以大展拳脚</p>\n<h3 id=\"文件的压缩与合并\">文件的压缩与合并</h3><p>在平常的前端项目开发中，最需要顾忌的就是效率问题。为了提升用户体验，页面的加载不能过长，这也就使得“优化”在前端开发中永远是个说不完道不尽的话题。一些比较常见的优化方式有这么几种：</p>\n<ul>\n<li>JavaScript文件的优化：将多个JS文件合并成一个文件，以减少请求次数。对JavaScript文件采用压缩，消除掉所有缩进和换行，减小文件体积。使用类似uglify的压缩工具压缩JavaScript代码内部变量名称长度，减少文件体积等等</li>\n<li>CSS文件的优化：将多个CSS文件合并成一个文件，并进行压缩。道理同JS文件的合并及压缩</li>\n<li>图片文件的合并：sprite技术，也是为了减少请求次数</li>\n<li>等等等等</li>\n</ul>\n<p>这些文件的压缩合并都可以交给Grunt进行处理</p>\n<h3 id=\"代码提示\">代码提示</h3><p>无论CSS、JavaScript、HTML都是在快速发展的，这也导致了API及一些属性功能的变化。同时这些代码不像Java那样有一套完善的编码时错误提示，这也是JSHint，CSSHint等代码提示出现的原因。这些编码提示也可以通过Grunt来进行处理</p>\n<h3 id=\"预处理\">预处理</h3><p>众所周知，现在出现了很多以提升开发效率为目的的前端语言预处理方案：</p>\n<ul>\n<li>CSS相关：Less和Sass，通过简洁的语法，来提升代码的复用性</li>\n<li>JavaScript相关：CoffeeScript，类似Python的语法，友好而高效</li>\n<li>HTML：一些模板引擎如Jade</li>\n</ul>\n<p>这些预处理也可以交给Grunt来进行</p>\n<h3 id=\"一些额外的处理\">一些额外的处理</h3><p>有时候还会需要一些额外的需求，比如添加版本自动更新注释，CSS前缀自动补全等等。这些Grunt也提供了很多插件进行处理，方便快捷</p>\n<h2 id=\"安装Grunt\">安装Grunt</h2><h3 id=\"首先你得有一个xxx\">首先你得有一个xxx</h3><p>想要使用Grunt，首先你得有一个Node.js环境和一个npm。这俩网上教程一大把，安装也很简单，就不说了。这里只提及Grunt如何安装</p>\n<p>另外这里介绍的是Grunt 0.4.x，要求Node.js的版本在0.8.0以上，如果已经使用了Grunt 0.3.x版本的，可以先卸载，然后重新安装0.4.x版本</p>\n<h3 id=\"使用npm安装Grunt命令行\">使用npm安装Grunt命令行</h3><p>执行如下代码：<br><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ npm install -g grunt-cli</span><br></pre></td></tr></table></figure></p>\n<p>这样就可以在命令行使用<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#10;###&#23433;&#35013;Grunt&#10;&#20351;&#29992;&#36807;Node.js&#20570;&#36807;&#39033;&#30446;&#30340;&#20154;&#24212;&#35813;&#37117;&#23545;```package.json```&#36825;&#20010;&#25991;&#20214;&#19981;&#38476;&#29983;&#20102;&#12290;Grunt&#23433;&#35013;&#20063;&#26159;&#36890;&#36807;npm&#23433;&#35013;&#65292;&#25152;&#20197;&#21482;&#35201;&#23558;&#20854;&#21152;&#20837;&#21040;```devDependencies```&#20013;&#23601;&#21487;&#20197;&#20102;&#12290;&#19968;&#20010;&#31616;&#21333;&#30340;package.json&#25991;&#20214;&#22823;&#27010;&#38271;&#36825;&#20010;&#26679;&#23376;&#65306;&#10;```javascript&#10;&#123;&#10;  &#34;name&#34;: &#34;your project name&#34;,&#10;  &#34;version&#34;: &#34;x.x.x&#34;,&#10;  &#34;devDependencies&#34;: &#123;&#10;    &#34;grunt&#34;: &#34;~0.4.2&#34;,&#10;    &#34;grunt-autoprefixer&#34;: &#34;~0.4.0&#34;,&#10;    &#34;grunt-contrib-watch&#34;: &#34;~0.5.3&#34;,&#10;    &#34;grunt-contrib-concat&#34;: &#34;~0.3.0&#34;,&#10;    &#34;grunt-contrib-cssmin&#34;: &#34;~0.8.0&#34;,&#10;    &#34;load-grunt-tasks&#34;: &#34;~0.2.0&#34;&#10;  &#125;&#10;&#125;</span><br></pre></td></tr></table></figure></p>\n<p>在写完类似的<figure class=\"highlight\"><figcaption><span>install```就可以从npm自动安装了，下面几个都是grunt的可选查件，大致上介绍几个可选查件（包括上面出现的和没出现的）:</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">* grunt-contrib-watch: &#33258;&#21160;&#30417;&#21548;&#25351;&#23450;&#25991;&#20214;&#25913;&#21464;&#24182;&#25191;&#34892;&#30456;&#20851;&#20219;&#21153;&#27969;&#30340;&#25554;&#20214;&#10;* grunt-contrib-concat: &#25991;&#26412;&#21512;&#24182;&#25554;&#20214;&#10;* grunt-contrib-cssmin: CSS&#20195;&#30721;&#21387;&#32553;&#25554;&#20214;&#10;* grunt-autoprefixer: &#20026;CSS&#23646;&#24615;&#33258;&#21160;&#28155;&#21152;&#21069;&#32512;&#65292;&#20860;&#23481;&#20449;&#24687;&#26469;&#33258;&#33879;&#21517;&#30340;[Can I Use](http://caniuse.com/)&#32593;&#31449;&#10;* grunt-contrib-jshint&#65306;JavaScript&#20195;&#30721;&#25552;&#31034;&#25554;&#20214;&#10;* grunt-contrib-uglify&#65306;JavaScript&#20195;&#30721;&#21387;&#32553;&#25554;&#20214;&#10;* load-grunt-tasks&#65306;&#33258;&#21160;&#21152;&#36733;Grunt&#25554;&#20214;&#30340;&#25554;&#20214;&#65288;&#22909;&#32469;&#21475;&#65289;&#10;* &#36824;&#26377;&#19968;&#22823;&#22534;&#35831;&#21442;&#35265;[Grunt plugins](http://gruntjs.com/plugins)&#65292;&#36825;&#20010;&#26159;&#23448;&#32593;&#19978;&#30340;&#65292;&#20294;&#26159;&#25105;&#26174;&#31034;&#19981;&#20986;&#26469;,&#26080;&#27490;&#22659;&#30340;loading&#65292;&#25152;&#20197;&#21487;&#20197;&#21435;[npm&#23448;&#32593;](https://npmjs.org/)&#19978;&#25628;gruntplugin&#20851;&#38190;&#23383;&#10;&#10;&#36825;&#20123;&#25554;&#20214;&#30340;&#23433;&#35013;&#20063;&#26159;&#19968;&#26679;&#20889;&#22312;devDependencies&#20013;&#65292;&#23450;&#22909;&#38656;&#35201;&#30340;&#29256;&#26412;&#21495;&#21518;&#30452;&#25509;&#20351;&#29992;```npm install```&#21629;&#20196;&#23433;&#35013;&#21487;&#20197;&#20102;&#12290;&#25110;&#32773;&#20063;&#21487;&#20197;&#21453;&#36807;&#26469;&#65292;&#20808;&#20351;&#29992;```npm install grunt --save-dev```&#23433;&#35013;&#65292;&#28982;&#21518;&#20877;&#23558;&#20381;&#36182;&#21152;&#20837;&#21040;package.json&#30340;devDependencies&#20013;&#10;&#10;##&#37197;&#32622;&#39033;&#30446;&#20013;&#30340;Grunt&#10;Grunt&#30340;&#37197;&#32622;&#37117;&#20889;&#22312;&#19968;&#20010;&#21517;&#20026;```Gruntfile.js```&#30340;&#25991;&#20214;&#20013;&#65288;&#24403;&#28982;&#65292;&#22312;&#36825;&#37324;&#38754;&#21487;&#20197;&#36890;&#36807;&#24341;&#20837;&#22806;&#37096;&#25991;&#20214;&#30340;&#26041;&#24335;&#26469;&#21152;&#36733;&#33258;&#24049;&#30340;&#37197;&#32622;&#25991;&#20214;&#65289;&#65292;&#36825;&#20010;&#25991;&#20214;&#24517;&#39035;&#22312;&#39033;&#30446;&#30340;&#26681;&#30446;&#24405;&#19979;&#65292;&#20063;&#23601;&#26159;&#21644;```package.json```&#21516;&#19968;&#36335;&#24452;&#19979;&#65292;&#19968;&#20010;&#31616;&#21333;&#30340;```Gruntfile.js```&#25991;&#20214;&#22823;&#27010;&#38271;&#36825;&#20010;&#26679;&#23376;&#65306;&#10;```javascript&#10;module.exports = function(grunt) &#123;&#10;  grunt.initConfig(&#123;&#10;    //&#30830;&#23450;&#38656;&#35201;&#21152;&#36733;&#30340;package.json&#25991;&#20214;&#30340;&#36335;&#24452;&#10;    pkg: grunt.file.readJSON(&#39;package.json&#39;),&#10;    //&#23450;&#20041;&#20219;&#21153;&#10;    concat: &#123;&#10;      dist: &#123;&#10;        src: [&#10;          &#39;src/css/*.css&#39;&#10;        ],&#10;        dest: &#39;skyinlayer.css&#39;&#10;      &#125;&#10;    &#125;&#10;  &#125;);&#10;  //&#21152;&#36733;&#25554;&#20214;&#10;  grunt.loadNpmTasks(&#39;grunt-contrib-concat&#39;);&#10;  //&#23450;&#20041;&#40664;&#35748;&#20219;&#21153;&#21015;&#34920;&#10;  grunt.registerTask(&#39;default&#39;, [&#39;concat&#39;]);&#10;&#125;;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"引入package-json中的配置\">引入package.json中的配置</h3><p>通过<figure class=\"highlight\"><figcaption><span>%>```模板字符串来进行引用</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">###&#23450;&#20041;&#20219;&#21153;&#10;&#23450;&#20041;&#20219;&#21153;&#37096;&#20998;&#21017;&#26159;&#23450;&#20041;&#20102;&#19968;&#20010;&#20219;&#21153;&#25152;&#38656;&#35201;&#30340;&#30456;&#20851;&#37197;&#32622;&#65292;&#27604;&#22914;&#36825;&#37324;&#23450;&#20041;&#20102;&#21512;&#24182;&#25991;&#20214;&#65288;concat&#65289;&#20219;&#21153;&#65292;&#30456;&#20851;&#37197;&#32622;&#30830;&#23450;&#20102;&#38656;&#35201;&#34987;&#21512;&#24182;&#30340;&#25991;&#20214;&#20026;```src/css/```&#19979;&#30340;&#25152;&#26377;&#21518;&#32512;&#20026;```.css```&#30340;&#25991;&#20214;&#65292;&#21512;&#24182;&#23436;&#25104;&#30340;&#25991;&#20214;&#36755;&#20986;&#21040;&#26681;&#30446;&#24405;&#19979;&#30340;```skyinlayer.css```&#25991;&#20214;&#20013;&#12290;&#10;&#10;&#22312;&#23450;&#20041;&#20219;&#21153;&#37096;&#20998;&#21487;&#20197;&#23450;&#20041;&#22810;&#20010;&#20219;&#21153;&#65292;&#27604;&#22914;&#25105;&#20889;&#19968;&#20010;&#32431;CSS&#30340;&#39033;&#30446;&#65292;&#20063;&#38656;&#35201;&#32463;&#36807;&#21512;&#24182;&#12289;&#28155;&#21152;&#21069;&#32512;&#12289;&#21387;&#32553;&#31561;&#20219;&#21153;&#65292;&#65292;&#25152;&#20197;&#21487;&#20197;&#23558;&#20854;&#20462;&#25913;&#20026;&#22914;&#19979;&#65306;&#10;```javascript&#10;concat: &#123;&#10;  dist: &#123;&#10;    src: [&#10;      &#39;src/base.css&#39;,&#10;      &#39;src/**/*.css&#39;&#10;    ],&#10;    dest: &#39;skyinlayer.css&#39;&#10;  &#125;&#10;&#125;,&#10;&#10;autoprefixer: &#123;&#10;  no_dest: &#123;&#10;    src: &#39;skyinlayer.css&#39;&#10;  &#125;,&#10;&#125;,&#10;&#10;cssmin: &#123;&#10;  minify: &#123;&#10;    src: [&#39;skyinlayer.css&#39;],&#10;    dest: &#39;skyinlayer.min.css&#39;,&#10;  &#125;,&#10;&#125;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"加载插件\">加载插件</h3><p>由于Grunt的任务都是通过npm插件的形式被引入的，所以需要进行查件加载，通过如下语句加载：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">grunt.loadNpmTasks(<span class=\"string\">'grunt-contrib-concat'</span>);</span><br><span class=\"line\">grunt.loadNpmTasks(<span class=\"string\">'grunt-autoprefixer'</span>);</span><br><span class=\"line\">grunt.loadNpmTasks(<span class=\"string\">'grunt-contrib-cssmin'</span>);</span><br></pre></td></tr></table></figure></p>\n<p>这样就加载了三个插件，分别用来指向上面定义的三个任务，值得注意的是可以使用<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">```javascript&#10;require(&#39;load-grunt-tasks&#39;)(grunt);</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"定义默认任务流程\">定义默认任务流程</h3><p>在定义完任务以及加载完插件之后，我们需要定义任务流程，确定任务执行的顺序。使用如下代码定义任务流程：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">grunt.registerTask(<span class=\"string\">'default'</span>, [<span class=\"string\">'concat'</span>,<span class=\"string\">'autoprefixer'</span>,<span class=\"string\">'cssmin'</span>]);</span><br></pre></td></tr></table></figure></p>\n<p>这样定义完后，每次执行<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#10;###&#30417;&#21548;&#25991;&#20214;&#21464;&#21270;&#10;&#19968;&#33324;&#24773;&#20917;&#19979;&#65292;&#25105;&#20204;&#38656;&#35201;&#22810;&#27425;&#25913;&#21160;&#20195;&#30721;&#26469;&#26597;&#30475;&#25928;&#26524;&#65292;&#26377;&#26102;&#20505;&#25913;&#21160;&#24456;&#23567;&#29978;&#33267;&#21482;&#26159;&#19968;&#20010;&#25968;&#23383;&#12290;&#36825;&#26679;&#27599;&#27425;&#25913;&#21160;&#37117;&#38656;&#35201;&#25163;&#21160;&#25191;&#34892;grunt&#21629;&#20196;&#22826;&#40635;&#28902;&#20102;&#65292;```grunt-contrib-watch```&#36825;&#20010;&#25554;&#20214;&#24110;&#25105;&#20204;&#35299;&#20915;&#20102;&#36825;&#20010;&#38382;&#39064;&#12290;&#24341;&#20837;```grunt-contrib-watch```&#25554;&#20214;&#21644;&#19978;&#38754;&#19968;&#26679;&#65288;&#22914;&#26524;&#20351;&#29992;&#20102;```load-grunt-tasks```&#65292;&#19981;&#38656;&#35201;&#39069;&#22806;&#30340;&#24341;&#20837;&#36807;&#31243;&#65289;&#12290;&#23450;&#20041;watch&#20219;&#21153;&#65306;&#10;```javascript&#10;watch: &#123;&#10;  css: &#123;&#10;    files: [&#10;      &#39;src/**/*&#39;,&#10;      &#39;!node_modules&#39;&#10;    ],&#10;    tasks: [&#39;concat&#39;, &#39;autoprefixer&#39;, &#39;cssmin&#39;],&#10;  &#125;&#10;&#125;</span><br></pre></td></tr></table></figure></p>\n<p>其中，files属性可以定义哪些文件需要监听改变，哪些不需要，而tasks则定义了文件改变后需要执行的任务流程。这样定义的话，比如我的<code>src/css/base.css</code>文件进行了变更，在保存的时候，将自动执行代码合并，前缀添加及代码压缩等任务</p>\n<h2 id=\"总结\">总结</h2><p>Grunt其实还有很多更加深入的用法，比如读取json问价作为配置文件、根据配置文件动态的进行处理等等（比如<a href=\"https://github.com/daneden/animate.css\" target=\"_blank\" rel=\"external\">daneden的animate.css项目</a>），这里就只是介绍了一下基础的用法。学好了Grunt，以后也可以出去和别人吹牛逼说自己的项目工作流是自动化的啦（括弧笑）</p>\n<h2 id=\"更多详细请参考\">更多详细请参考</h2><p><a href=\"http://www.gruntjs.net/\" target=\"_blank\" rel=\"external\">Grunt官网</a></p>\n<p><a href=\"http://www.w3cplus.com/blog/tags/372.html\" target=\"_blank\" rel=\"external\">W3CPlus的Grunt相关文章</a></p>\n"}