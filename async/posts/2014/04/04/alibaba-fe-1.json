{"tags":[{"name":"CSS","permalink":"http://lingyucoder.github.io/tags/CSS/","url":"/async/tags/CSS.json","count":35},{"name":"HTML","permalink":"http://lingyucoder.github.io/tags/HTML/","url":"/async/tags/HTML.json","count":29},{"name":"JavaScript","permalink":"http://lingyucoder.github.io/tags/JavaScript/","url":"/async/tags/JavaScript.json","count":39}],"categories":[{"name":"笔试面试","permalink":"http://lingyucoder.github.io/categories/笔试面试/","url":"/async/categories/笔试面试.json","count":8}],"url":"/async/posts/2014/04/04/alibaba-fe-1.json","date":1396540800000,"path":{"year":2014,"month":4,"day":4,"name":"alibaba-fe-1"},"subtitle":"前端面试题积累系列","title":"阿里巴巴前端笔试题（1-10）","permalink":"http://lingyucoder.github.io/2014/04/04/alibaba-fe-1/","content":"<p>最近笔了阿里巴巴的笔试题，有很多细节上的问题需要总结。题目还是不错的</p>\n<a id=\"more\"></a>\n<h2 id=\"第一题\">第一题</h2><h3 id=\"题面\">题面</h3><p>说出以下函数的作用是？空白区域应该填写什么？<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// define  </span></span><br><span class=\"line\">(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">window</span>) </span>&#123;  </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">fn</span>(<span class=\"params\">str</span>) </span>&#123;  </span><br><span class=\"line\">        <span class=\"keyword\">this</span>.str = str;  </span><br><span class=\"line\">    &#125;  </span><br><span class=\"line\">    fn.prototype.format = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;  </span><br><span class=\"line\">        <span class=\"keyword\">var</span> arg = ______;  </span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.str.replace(_______, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">a, b</span>) </span>&#123;  </span><br><span class=\"line\">            <span class=\"keyword\">return</span> arg[b] || <span class=\"string\">''</span>;  </span><br><span class=\"line\">        &#125;);  </span><br><span class=\"line\">    &#125;  </span><br><span class=\"line\">    <span class=\"built_in\">window</span>.fn = fn;  </span><br><span class=\"line\">&#125;)(<span class=\"built_in\">window</span>);  </span><br><span class=\"line\"><span class=\"comment\">// use  </span></span><br><span class=\"line\">(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;  </span><br><span class=\"line\">    <span class=\"keyword\">var</span> t = <span class=\"keyword\">new</span> fn(<span class=\"string\">'&lt;p&gt;&lt;a href=\"&#123;0&#125;\"&gt;&#123;1&#125;&lt;/a&gt;&lt;span&gt;&#123;2&#125;&lt;/span&gt;&lt;/p&gt;'</span>);</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log( t.format(<span class=\"string\">'http://www.alibaba.com'</span>, <span class=\"string\">'Alibaba'</span>, <span class=\"string\">'Welcome'</span>) );  </span><br><span class=\"line\">&#125;)();</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"解答\">解答</h3><p>看题面就是，类似于写一个模板引擎。将模板里的<code>{1}</code>之类的占位符替换成传给它的参数。所以arg应该就是arguments。但是由于arg不是数组，而是一个类数组对象。所以需要进行一些转换，比较常规的转换方式如下：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> arg = <span class=\"built_in\">Array</span>.prototype.slice.call(<span class=\"built_in\">arguments</span>, <span class=\"number\">0</span>);</span><br></pre></td></tr></table></figure></p>\n<p>等号右边也就是第一空的答案了</p>\n<p>第二空则是要通过正则找出占位符，并根据占位符内的数字将其替换成arg数组内的字符串，说实话replace方法的第二个参数为函数的情况很少遇到，这里就是考的这个，最初想法是直接用全局正则匹配一下：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.str.replace(<span class=\"regexp\">/\\&#123;\\d+\\&#125;/g</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">a, b</span>) </span>&#123;  </span><br><span class=\"line\">    <span class=\"keyword\">return</span> arg[b] || <span class=\"string\">''</span>;  </span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure></p>\n<p>这样，但是穿进去之后发现不太对，因为b参数是正则匹配到的字符串在完整字符串中的位置。于是去查了一下W3C：</p>\n<blockquote>\n<p>该函数的第一个参数是匹配模式的字符串。接下来的参数是与模式中的子表达式匹配的字符串，可以有 0 个或多个这样的参数。接下来的参数是一个整数，声明了匹配在 stringObject 中出现的位置。最后一个参数是 stringObject 本身。</p>\n</blockquote>\n<p>这里显然是因为没有子表达式，所以直接b成了声明的匹配在stringObject中出现的位置。这样就好说了，与模式中字表达式匹配，那加一个子表达式进去，变成这样：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.str.replace(<span class=\"regexp\">/\\&#123;(\\d+)\\&#125;/g</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">a, b</span>) </span>&#123;  </span><br><span class=\"line\">    <span class=\"keyword\">return</span> arg[b] || <span class=\"string\">''</span>;  </span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure></p>\n<p>跑一下，齐活，输出<code>&lt;p&gt;&lt;a href=&quot;http://www.alibaba.com&quot;&gt;Alibaba&lt;/a&gt;&lt;span&gt;Welcome&lt;/span&gt;&lt;/p&gt;</code></p>\n<h2 id=\"第二题\">第二题</h2><h3 id=\"题面-1\">题面</h3><p><img src=\"http://lingyu.wang/img/fe_interview/9.png\" alt=\"第二题题面\"></p>\n<h3 id=\"解答-1\">解答</h3><p>这题由于时间不太够，就没有写可执行代码，主要是涉及cookie操作。可以分成用户第一次进入检测，用户点击我知道了检测两个行为来分别处理：</p>\n<p>第一次进入的时候，首先判断cookie中是否有今天已来过标记，没有记录就写进一个标记，同时由于同一天不显示，所以这个写入带标记的cookie的过期时间应该为1天，这里标记为visited：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span>(<span class=\"built_in\">document</span>.cookie.indexOf(visited) === -<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">    <span class=\"built_in\">document</span>.cookie = <span class=\"string\">'visited='</span> + <span class=\"built_in\">escape</span>(<span class=\"string\">'1'</span>) + <span class=\"string\">';expires='</span> + <span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>((<span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>().getTime() + <span class=\"number\">24</span> * <span class=\"number\">3600</span> * <span class=\"number\">1000</span>)).toGMTString();</span><br><span class=\"line\">    showTips();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>点不再访问的时候，应该运行如下代码：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">document</span>.cookie = <span class=\"string\">'visited='</span> + <span class=\"built_in\">escape</span>(<span class=\"string\">'1'</span>) + <span class=\"string\">';expires='</span> + <span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>((<span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>().getTime() +  <span class=\"number\">100</span> * <span class=\"number\">365</span> * <span class=\"number\">24</span> * <span class=\"number\">3600</span> * <span class=\"number\">1000</span>)).toGMTString();</span><br></pre></td></tr></table></figure></p>\n<p>这样设定一个100年才过期的cookie，就相当于永久不显示了</p>\n<h2 id=\"第三题\">第三题</h2><h3 id=\"题面-2\">题面</h3><p><img src=\"http://lingyu.wang/img/fe_interview/10.png\" alt=\"第3题题面\"></p>\n<h3 id=\"解答-2\">解答</h3><p>在ul的li上绑点击事件，典型的事件代理的题，要输出index，所以需要提前进行一些提前处理：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> nav = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"nav\"</span>);</span><br><span class=\"line\">    <span class=\"keyword\">var</span> liList = nav.children;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bindEvent</span>(<span class=\"params\">ele, event, callback</span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (ele.attachEvent) &#123;</span><br><span class=\"line\">            ele.attachEvent(<span class=\"string\">\"on\"</span> + event, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">event</span>) </span>&#123;</span><br><span class=\"line\">                event = event || <span class=\"built_in\">window</span>.event;</span><br><span class=\"line\">                event.target = event.target || event.srcElement;</span><br><span class=\"line\">                callback(event);</span><br><span class=\"line\">            &#125;);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            ele.addEventListener(event, callback, <span class=\"literal\">false</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">    bindEvent(nav, <span class=\"string\">\"click\"</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">event</span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> target = event.target;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> a;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> i, m;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (target.tagName.toLowerCase() === <span class=\"string\">\"li\"</span>) &#123;</span><br><span class=\"line\">            a = target.children[<span class=\"number\">0</span>];</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (i = <span class=\"number\">0</span>, m = liList.length; i &lt; m; i++) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (liList[i] === event.target) &#123;</span><br><span class=\"line\">                    <span class=\"built_in\">console</span>.log(i + <span class=\"number\">1</span>);</span><br><span class=\"line\">                    <span class=\"built_in\">console</span>.log(a.getAttribute(<span class=\"string\">\"href\"</span>));</span><br><span class=\"line\">                    <span class=\"built_in\">console</span>.log(a.innerText);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">&#125;());</span><br></pre></td></tr></table></figure></p>\n<p>这个事件代理的思想就是，在ul上采用冒泡机制绑定点击事件，在回调函数中使用event.target(IE底下会说)判断是否是li节点，如果是，则输出需要的数字</p>\n<p>这里说要支持（该死的）IE，于是多了好几个点：</p>\n<ul>\n<li>IE的事件绑定需要用attachEvent，而不能直接用addEventListener，所以需要额外处理</li>\n<li>老版本的event不是又函数传入，而是写在window里面，所以也需要做一个兼容</li>\n<li>老版本的IE中，并没有event.target，所以取而代之的是event.srcElement</li>\n<li>IE6、7、8使用数组的slice方法会报错，同时也无法使用indexOf，所以要么把这两个方法重新实现，要么直接通过遍历的方式来处理，我这里直接采用遍历的方式（因为重新实现代码加长很多）</li>\n<li>去死吧IE</li>\n</ul>\n<h2 id=\"第四题\">第四题</h2><h3 id=\"题面-3\">题面</h3><p><img src=\"http://lingyu.wang/img/fe_interview/11.png\" alt=\"第4题题面\"></p>\n<h3 id=\"解答-3\">解答</h3><p>妈蛋被坑了，没看到还要写出其框内内容，写了个绝对定位就交了，呵呵呵呵呵呵呵呵呵呵呵呵呵呵呵呵呵呵呵呵呵呵呵呵呵呵呵呵呵呵呵呵呵呵呵呵呵呵呵呵呵呵呵呵呵呵呵呵呵呵呵呵呵呵呵呵呵呵呵呵呵呵呵呵呵呵呵呵呵呵呵呵呵呵呵呵呵呵呵呵呵呵呵呵呵呵呵呵呵呵呵呵呵呵呵呵</p>\n<p>及其简单的绝对定位题，里面的内容分成两块，一块是左边的二维码，一块是右边的文字部分。左边浮动，右边触发bfc</p>\n<iframe width=\"100%\" height=\"600\" src=\"http://jsfiddle.net/skyinlayer/27hGA/1/embedded/result,html,css\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\">&nbsp;</iframe>\n\n<h2 id=\"第五题\">第五题</h2><h3 id=\"题面-4\">题面</h3><p><img src=\"http://lingyu.wang/img/fe_interview/12.png\" alt=\"第5题题面\"></p>\n<h3 id=\"解答-4\">解答</h3><p>这题是作文…完全答不全，这里的答案不一定对，都是网上摘抄的</p>\n<p>可以分成两个部分进行阐述： 1. http连接建立  2.对网页及其资源进行请求</p>\n<p>http建立经过如下步骤：</p>\n<ol>\n<li>浏览器获得url后，对其通过DNS进行解析，转换成ip地址，以及添加上响应的端口（如果没有显式指定，默认80）</li>\n<li>浏览器通过三步握手与这个服务器建立TCP连接</li>\n<li>在连接建立后，发送一个HTTP请求报文，里面包含了请求的资源的URL，请求方法，参数等等信息</li>\n<li>服务器接收到请求报文后进行处理，返回一个包含请求资源内容的响应报文</li>\n<li>浏览器关闭这个TCP连接（在HTTP1.1中不会进行关闭，除非进行显式的connection=close，而HTTP1.0中，则会关闭，可以通过keepAlive指定不关闭）</li>\n</ol>\n<p>对网页的资源请求：</p>\n<ol>\n<li>浏览器的url框获得url后，通过上述的方式获得HTML文档，获得完成后触发document.onload事件</li>\n<li>解析HTML文档，然后按照HTML文档结构从上往下开始请求资源（批量4-8）</li>\n<li>请求CSS样式表，当样式表到来的时候，将会拿它和之前已经到来的样式表进行合并和解析，修改渲染树，对页面进行回流和重绘</li>\n<li><code>&lt;scirpt&gt;</code>所添加的脚本在执行完成之前，会阻塞后续的HTML进行解析。而如果通过src添加外链的方式来引入js脚本，那么在请求、下载、解析、运行所有过程完成之前，都不会进行后续HTML的解析</li>\n<li>如果通过javascript添加script标签的方式加载，将会异步进行加载</li>\n</ol>\n<h2 id=\"第六题\">第六题</h2><h3 id=\"题面-5\">题面</h3><p><img src=\"http://lingyu.wang/img/fe_interview/13.png\" alt=\"第6题题面\"></p>\n<h3 id=\"解答-5\">解答</h3><p>这题本来不难，一个下拉框，可以只用html+css实现，活用一下css的伪类就行了，至于那个小箭头用after伪元素画一下问题不大，代码如下，测试了一下能到IE7：</p>\n<iframe width=\"100%\" height=\"600\" src=\"http://jsfiddle.net/skyinlayer/ZQ5Jd/1/embedded/result,css,html\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\">&nbsp;</iframe>\n\n<p>但是底下的要求，直接让我吐血，支持IE6+…就这一句话得加多少乱七八糟的兼容….IE6不支持子元素选择器，去掉之。IE6没hover，去掉之。另外小箭头肯定不能用border画了，懒得弄图片了，补上js代码。结果如下：</p>\n<iframe width=\"100%\" height=\"600\" src=\"http://jsfiddle.net/skyinlayer/ZQ5Jd/4/embedded/result,css,html\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\">&nbsp;</iframe>\n\n<h2 id=\"第七题\">第七题</h2><h3 id=\"题面-6\">题面</h3><p><img src=\"http://lingyu.wang/img/fe_interview/14.png\" alt=\"第7题题面\"></p>\n<h3 id=\"解答-6\">解答</h3><p>表单序列化，获取表单中的元素然后获取他们的值，拼接成字符串，挺有意思的一道题</p>\n<p>通过form.elements可以获得所有的元素，顺序遍历一遍就好，需要注意的是checkbox和radio的checked状态，另外除了input以外，还有select和textarea（这里可能考虑不全）</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">serialize</span>(<span class=\"params\">form</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> params = [];</span><br><span class=\"line\">    <span class=\"keyword\">var</span> elements = form.elements;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> i, m;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> input;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (i = <span class=\"number\">0</span>, m = elements.length; i &lt; m; i++) &#123;</span><br><span class=\"line\">        input = elements[i];</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (input.tagName.toLowerCase() === <span class=\"string\">\"input\"</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">switch</span> (input.type) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">case</span> <span class=\"string\">\"radio\"</span>:</span><br><span class=\"line\">                <span class=\"keyword\">case</span> <span class=\"string\">\"checkbox\"</span>:</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (!input.checked) &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                <span class=\"keyword\">default</span>:</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (input.disabled == <span class=\"literal\">false</span> &amp;&amp; input.name.length) &#123;</span><br><span class=\"line\">                        params.push(<span class=\"built_in\">encodeURI</span>(input.name) + <span class=\"string\">\"=\"</span> + <span class=\"built_in\">encodeURI</span>(input.value));</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (input.tagName.toLowerCase() === <span class=\"string\">\"textarea\"</span> || input.tagName.toLowerCase() === <span class=\"string\">\"select\"</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (input.disabled == <span class=\"literal\">false</span> &amp;&amp; input.name.length) &#123;</span><br><span class=\"line\">                params.push(<span class=\"built_in\">encodeURI</span>(input.name) + <span class=\"string\">\"=\"</span> + <span class=\"built_in\">encodeURI</span>(input.value));</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> params.join(<span class=\"string\">\"&amp;\"</span>);</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h2 id=\"第八题\">第八题</h2><h3 id=\"题面-7\">题面</h3><p><img src=\"http://lingyu.wang/img/fe_interview/15.png\" alt=\"第8题题面\"></p>\n<h3 id=\"解答-7\">解答</h3><p>数组去重…这还只是扁平数组，不难，去哪儿那题是嵌套数组。不过它竟然要自己构造数组。去重的话直接用一个Object做标记就行。也可以考虑直接用indexOf判断，不过效率会降低<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> array = [];</span><br><span class=\"line\"><span class=\"keyword\">var</span> i;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getRandomNumberString</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">Math</span>.floor(<span class=\"built_in\">Math</span>.random() * <span class=\"number\">100</span>) + <span class=\"string\">''</span>;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> (i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">100</span>; i++) &#123;</span><br><span class=\"line\">    array.push(getRandomNumberString());</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">unique</span>(<span class=\"params\">array</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> result = [];</span><br><span class=\"line\">    <span class=\"keyword\">var</span> uniObj = &#123;&#125;;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> i, tmp;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (i = array.length; i--;) &#123;</span><br><span class=\"line\">        tmp = <span class=\"built_in\">parseInt</span>(array[i]);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!uniObj[tmp]) &#123;</span><br><span class=\"line\">            result.push(tmp);</span><br><span class=\"line\">            uniObj[tmp] = <span class=\"number\">1</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> result;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(unique(array));</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"第九题\">第九题</h2><h3 id=\"题面-8\">题面</h3><p><img src=\"http://lingyu.wang/img/fe_interview/16.png\" alt=\"第9题题面\"></p>\n<h3 id=\"解答-8\">解答</h3><p>竟然会有这种题，好吧</p>\n<p>第一个地方是浏览器嗅探。这里使用了无关属性<code>document.all</code>来嗅探IE，这样并不好。应该直接使用方法来嗅探，所以将其改为<code>window.attachEvent</code></p>\n<p>第二个地方是事件对象未处理，我也是后来才知道的，自己只写了第一条就交了。这里由于老式IE对event和event.target不支持，所以需要进行兼容</p>\n<p>第三个地方，记得提升变量申明</p>\n<p>总体修改代码如下：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> addListener;</span><br><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"built_in\">window</span>.addEventListener) &#123;</span><br><span class=\"line\">    addListener = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">el, type, listener, useCapture</span>) </span>&#123;</span><br><span class=\"line\">        el.addEventListener(type, listener, useCapture);</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"built_in\">window</span>.attachEvent) &#123;</span><br><span class=\"line\">    addListener = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">el, type, listener</span>) </span>&#123;</span><br><span class=\"line\">        el.attachEvent(<span class=\"string\">\"on\"</span> + type, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">event</span>) </span>&#123;</span><br><span class=\"line\">            event = event || <span class=\"built_in\">window</span>.event;</span><br><span class=\"line\">            event.target = event.target || event.srcElement;</span><br><span class=\"line\">            listener.apply(el, [event]);</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"第十题\">第十题</h2><h3 id=\"题面-9\">题面</h3><p><img src=\"http://lingyu.wang/img/fe_interview/17.png\" alt=\"第10题题面\"></p>\n<h3 id=\"解答-9\">解答</h3><p>呵呵，还能不能愉快的答题了<code>(╯‵□′)╯︵┻━┻</code></p>\n"}