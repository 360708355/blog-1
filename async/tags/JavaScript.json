{"name":"JavaScript","permalink":"http://lingyu.wang/tags/JavaScript/","url":"/async/tags/JavaScript.json","count":39,"_total":39,"_totalPage":4,"_page":1,"posts":[{"tags":[{"name":"JavaScript","permalink":"http://lingyu.wang/tags/JavaScript/","url":"/async/tags/JavaScript.json","count":39},{"name":"NodeJs","permalink":"http://lingyu.wang/tags/NodeJs/","url":"/async/tags/NodeJs.json","count":14},{"name":"WebIM","permalink":"http://lingyu.wang/tags/WebIM/","url":"/async/tags/WebIM.json","count":9},{"name":"WebRTC","permalink":"http://lingyu.wang/tags/WebRTC/","url":"/async/tags/WebRTC.json","count":8},{"name":"WebSocket","permalink":"http://lingyu.wang/tags/WebSocket/","url":"/async/tags/WebSocket.json","count":8}],"categories":[{"name":"即时通信","permalink":"http://lingyu.wang/categories/即时通信/","url":"/async/categories/即时通信.json","count":9}],"url":"/async/posts/2014/05/22/webrtc-data-channels.json","date":1400688000000,"path":{"year":2014,"month":5,"day":22,"name":"webrtc-data-channels"},"subtitle":"使用WebRTC的数据通道实现高效的数据传输","title":"WebRTC的RTCDataChannel","permalink":"http://lingyu.wang/2014/05/22/webrtc-data-channels/","content":"<p>在两个浏览器中，为聊天、游戏、或是文件传输等需求发送信息是十分复杂的。通常情况下，我们需要建立一台服务器来转发数据，当然规模比较大的情况下，会扩展成多个数据中心。这种情况下很容易出现很高的延迟，同时难以保证数据的私密性。</p>\n<p>这些问题可以通过WebRTC提供的RTCDataChannel API来解决，他能直接在点对点之间传输数据。这篇文章将介绍如何创建并使用数据通道，并提供了一些网络上常见的用例</p>"},{"tags":[{"name":"JavaScript","permalink":"http://lingyu.wang/tags/JavaScript/","url":"/async/tags/JavaScript.json","count":39},{"name":"NodeJs","permalink":"http://lingyu.wang/tags/NodeJs/","url":"/async/tags/NodeJs.json","count":14},{"name":"WebIM","permalink":"http://lingyu.wang/tags/WebIM/","url":"/async/tags/WebIM.json","count":9},{"name":"WebRTC","permalink":"http://lingyu.wang/tags/WebRTC/","url":"/async/tags/WebRTC.json","count":8},{"name":"WebSocket","permalink":"http://lingyu.wang/tags/WebSocket/","url":"/async/tags/WebSocket.json","count":8}],"categories":[{"name":"即时通信","permalink":"http://lingyu.wang/categories/即时通信/","url":"/async/categories/即时通信.json","count":9}],"url":"/async/posts/2014/03/18/webRTC-2.json","date":1395072000000,"path":{"year":2014,"month":3,"day":18,"name":"webRTC-2"},"subtitle":"使用WebRTC + WebSocket搭建视频聊天室","title":"使用WebRTC搭建前端视频聊天室——信令篇","permalink":"http://lingyu.wang/2014/03/18/webRTC-2/","content":"<p>由于毕设研究定的题目是即时通信相关，于是乎决定研究一下WebRTC来实现浏览器内的音频聊天，同时探究一下WebRTC能做些什么</p>"},{"tags":[{"name":"JavaScript","permalink":"http://lingyu.wang/tags/JavaScript/","url":"/async/tags/JavaScript.json","count":39},{"name":"NodeJs","permalink":"http://lingyu.wang/tags/NodeJs/","url":"/async/tags/NodeJs.json","count":14},{"name":"WebIM","permalink":"http://lingyu.wang/tags/WebIM/","url":"/async/tags/WebIM.json","count":9},{"name":"WebRTC","permalink":"http://lingyu.wang/tags/WebRTC/","url":"/async/tags/WebRTC.json","count":8},{"name":"WebSocket","permalink":"http://lingyu.wang/tags/WebSocket/","url":"/async/tags/WebSocket.json","count":8}],"categories":[{"name":"即时通信","permalink":"http://lingyu.wang/categories/即时通信/","url":"/async/categories/即时通信.json","count":9}],"url":"/async/posts/2014/03/15/webRTC-1.json","date":1394812800000,"path":{"year":2014,"month":3,"day":15,"name":"webRTC-1"},"subtitle":"使用WebRTC + WebSocket搭建视频聊天室","title":"使用WebRTC搭建前端视频聊天室——入门篇","permalink":"http://lingyu.wang/2014/03/15/webRTC-1/","content":"<p>由于毕设研究定的题目是即时通信相关，于是乎决定研究一下WebRTC来实现浏览器内的音频聊天，同时探究一下WebRTC能做些什么</p>"},{"tags":[{"name":"JavaScript","permalink":"http://lingyu.wang/tags/JavaScript/","url":"/async/tags/JavaScript.json","count":39},{"name":"NodeJs","permalink":"http://lingyu.wang/tags/NodeJs/","url":"/async/tags/NodeJs.json","count":14}],"categories":[{"name":"JS技术","permalink":"http://lingyu.wang/categories/JS技术/","url":"/async/categories/JS技术.json","count":13}],"url":"/async/posts/2014/03/19/v8-gc.json","date":1395158400000,"path":{"year":2014,"month":3,"day":19,"name":"v8-gc"},"subtitle":"介绍了V8引擎的垃圾回收器所使用的算法以及进行的优化","title":"浅谈V8引擎中的垃圾回收机制","permalink":"http://lingyu.wang/2014/03/19/v8-gc/","content":"<p>这篇文章的所有内容均来自 朴灵的《深入浅出Node.js》及<a href=\"http://www.jayconrod.com/posts/55/a-tour-of-v8-garbage-collection\">A tour of V8:Garbage Collection</a>，后者还有中文翻译版<a href=\"http://newhtml.net/v8-garbage-collection/\">V8 之旅： 垃圾回收器</a>，我在这里只是做了个记录和结合</p>"},{"tags":[{"name":"CSS","permalink":"http://lingyu.wang/tags/CSS/","url":"/async/tags/CSS.json","count":35},{"name":"HTML","permalink":"http://lingyu.wang/tags/HTML/","url":"/async/tags/HTML.json","count":29},{"name":"JavaScript","permalink":"http://lingyu.wang/tags/JavaScript/","url":"/async/tags/JavaScript.json","count":39},{"name":"响应式","permalink":"http://lingyu.wang/tags/响应式/","url":"/async/tags/响应式.json","count":3}],"categories":[{"name":"响应式","permalink":"http://lingyu.wang/categories/响应式/","url":"/async/categories/响应式.json","count":3}],"url":"/async/posts/2014/02/14/responsive-web-design.json","date":1392307200000,"path":{"year":2014,"month":2,"day":14,"name":"responsive-web-design"},"subtitle":"读《响应式Web设计-HTML5和CSS3实践》有感（响应式网页设计部分）","title":"聊聊响应式网页设计","permalink":"http://lingyu.wang/2014/02/14/responsive-web-design/","content":"<p>总是在各个地方看到响应式Web设计。一直对其很感兴趣，也只是零零散散的接触，但并没有系统的去学习响应式。这两天读了Ben Frain著（王永强 译）的《响应式Web设计-HTML5和CSS3实践》，收获颇多，在这里记录一下</p>"},{"tags":[{"name":"CSS","permalink":"http://lingyu.wang/tags/CSS/","url":"/async/tags/CSS.json","count":35},{"name":"HTML","permalink":"http://lingyu.wang/tags/HTML/","url":"/async/tags/HTML.json","count":29},{"name":"JavaScript","permalink":"http://lingyu.wang/tags/JavaScript/","url":"/async/tags/JavaScript.json","count":39},{"name":"响应式","permalink":"http://lingyu.wang/tags/响应式/","url":"/async/tags/响应式.json","count":3}],"categories":[{"name":"响应式","permalink":"http://lingyu.wang/categories/响应式/","url":"/async/categories/响应式.json","count":3}],"url":"/async/posts/2014/02/15/responsive-html5.json","date":1392393600000,"path":{"year":2014,"month":2,"day":15,"name":"responsive-html5"},"subtitle":"读《响应式Web设计-HTML5和CSS3实践》有感（HTML5部分）","title":"聊聊响应式网页设计中的HTML5","permalink":"http://lingyu.wang/2014/02/15/responsive-html5/","content":"<p>继上一篇《聊聊响应式网页设计》。这一篇记录了响应式网页设计中的HTML5部分</p>"},{"tags":[{"name":"JavaScript","permalink":"http://lingyu.wang/tags/JavaScript/","url":"/async/tags/JavaScript.json","count":39}],"categories":[{"name":"JS技术","permalink":"http://lingyu.wang/categories/JS技术/","url":"/async/categories/JS技术.json","count":13}],"url":"/async/posts/2014/05/17/read-jq-src-5.json","date":1400256000000,"path":{"year":2014,"month":5,"day":17,"name":"read-jq-src-5"},"subtitle":"闲来没事读源码系列——jQuery","title":"jQuery的异步控制","permalink":"http://lingyu.wang/2014/05/17/read-jq-src-5/","content":"<p>jQuery中使用Deferred进行异步控制，其亦提供promise方法获取Promise对象，但实现上和其他的Promise的实现并不相同。Deferred/Promise对象的核心实现为三个回调函数队列，分别保存正确（done）、错误（fail）、进行中（progress）三个回调函数列表，它们都是<code>jQuery.Callbacks</code>实例</p>"},{"tags":[{"name":"JavaScript","permalink":"http://lingyu.wang/tags/JavaScript/","url":"/async/tags/JavaScript.json","count":39}],"categories":[{"name":"JS技术","permalink":"http://lingyu.wang/categories/JS技术/","url":"/async/categories/JS技术.json","count":13}],"url":"/async/posts/2014/05/12/read-jq-src-4.json","date":1399824000000,"path":{"year":2014,"month":5,"day":12,"name":"read-jq-src-4"},"subtitle":"闲来没事读源码系列——jQuery","title":"jQuery的事件机制——事件对象、兼容、接口","permalink":"http://lingyu.wang/2014/05/12/read-jq-src-4/","content":"<p>这篇主要介绍了jQuery中事件管理器的事件对象、兼容实现以及在jQuery对象上暴露的接口</p>"},{"tags":[{"name":"JavaScript","permalink":"http://lingyu.wang/tags/JavaScript/","url":"/async/tags/JavaScript.json","count":39}],"categories":[{"name":"JS技术","permalink":"http://lingyu.wang/categories/JS技术/","url":"/async/categories/JS技术.json","count":13}],"url":"/async/posts/2014/05/12/read-jq-src-3.json","date":1399824000000,"path":{"year":2014,"month":5,"day":12,"name":"read-jq-src-3"},"subtitle":"闲来没事读源码系列——jQuery","title":"jQuery的事件机制——核心篇","permalink":"http://lingyu.wang/2014/05/12/read-jq-src-3/","content":"<p>这篇主要介绍了jQuery中事件管理器的一些核心方法，涉及事件代理、自定事件模拟的冒泡、特殊函数的处理，命名空间的处理等等</p>"},{"tags":[{"name":"JavaScript","permalink":"http://lingyu.wang/tags/JavaScript/","url":"/async/tags/JavaScript.json","count":39}],"categories":[{"name":"JS技术","permalink":"http://lingyu.wang/categories/JS技术/","url":"/async/categories/JS技术.json","count":13}],"url":"/async/posts/2014/05/10/read-jq-src-2.json","date":1399651200000,"path":{"year":2014,"month":5,"day":10,"name":"read-jq-src-2"},"subtitle":"闲来没事读源码系列——jQuery","title":"jQuery的数据缓存","permalink":"http://lingyu.wang/2014/05/10/read-jq-src-2/","content":"<p>这次记录了一下jQuery的数据缓存——data部分，jq中能使用data接口在节点上进行数据缓存，事实上jq将节点上的数据分成了两个部分：userData和privData，分别表示公有数据和私有数据。私有数据中存放了一些jq的其他功能需要使用的数据，比如自定义事件等等。而userData则存放jq使用者的数据。这两个数据区分别有自己的接口</p>"}]}